{"ast":null,"code":"/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { objectKeys } from \"./tools/objectKeys\";\nexport function mergeClasses(classesFromUseStyles, classesFromProps, cx) {\n  //NOTE: We use this test to be resilient in case classesFromProps is not of the expected type.\n  if (!(classesFromProps instanceof Object)) {\n    return classesFromUseStyles;\n  }\n  const out = {};\n  objectKeys(classesFromUseStyles).forEach(ruleName => out[ruleName] = cx(classesFromUseStyles[ruleName], classesFromProps[ruleName]));\n  objectKeys(classesFromProps).forEach(ruleName => {\n    if (ruleName in classesFromUseStyles) {\n      return;\n    }\n    const className = classesFromProps[ruleName];\n    //...Same here, that why we don't do className === undefined\n    if (typeof className !== \"string\") {\n      return;\n    }\n    out[ruleName] = className;\n  });\n  return out;\n}","map":{"version":3,"names":["objectKeys","mergeClasses","classesFromUseStyles","classesFromProps","cx","Object","out","forEach","ruleName","className"],"sources":["D:/portfolio/node_modules/tss-react/esm/mergeClasses.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { objectKeys } from \"./tools/objectKeys\";\nexport function mergeClasses(classesFromUseStyles, classesFromProps, cx) {\n    //NOTE: We use this test to be resilient in case classesFromProps is not of the expected type.\n    if (!(classesFromProps instanceof Object)) {\n        return classesFromUseStyles;\n    }\n    const out = {};\n    objectKeys(classesFromUseStyles).forEach(ruleName => (out[ruleName] = cx(classesFromUseStyles[ruleName], classesFromProps[ruleName])));\n    objectKeys(classesFromProps).forEach(ruleName => {\n        if (ruleName in classesFromUseStyles) {\n            return;\n        }\n        const className = classesFromProps[ruleName];\n        //...Same here, that why we don't do className === undefined\n        if (typeof className !== \"string\") {\n            return;\n        }\n        out[ruleName] = className;\n    });\n    return out;\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,UAAU,QAAQ,oBAAoB;AAC/C,OAAO,SAASC,YAAY,CAACC,oBAAoB,EAAEC,gBAAgB,EAAEC,EAAE,EAAE;EACrE;EACA,IAAI,EAAED,gBAAgB,YAAYE,MAAM,CAAC,EAAE;IACvC,OAAOH,oBAAoB;EAC/B;EACA,MAAMI,GAAG,GAAG,CAAC,CAAC;EACdN,UAAU,CAACE,oBAAoB,CAAC,CAACK,OAAO,CAACC,QAAQ,IAAKF,GAAG,CAACE,QAAQ,CAAC,GAAGJ,EAAE,CAACF,oBAAoB,CAACM,QAAQ,CAAC,EAAEL,gBAAgB,CAACK,QAAQ,CAAC,CAAE,CAAC;EACtIR,UAAU,CAACG,gBAAgB,CAAC,CAACI,OAAO,CAACC,QAAQ,IAAI;IAC7C,IAAIA,QAAQ,IAAIN,oBAAoB,EAAE;MAClC;IACJ;IACA,MAAMO,SAAS,GAAGN,gBAAgB,CAACK,QAAQ,CAAC;IAC5C;IACA,IAAI,OAAOC,SAAS,KAAK,QAAQ,EAAE;MAC/B;IACJ;IACAH,GAAG,CAACE,QAAQ,CAAC,GAAGC,SAAS;EAC7B,CAAC,CAAC;EACF,OAAOH,GAAG;AACd"},"metadata":{},"sourceType":"module"}